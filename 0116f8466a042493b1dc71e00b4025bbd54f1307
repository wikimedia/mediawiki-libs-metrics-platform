{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "33e7d44c_93420fbb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 128
      },
      "writtenOn": "2022-08-26T11:11:50Z",
      "side": 1,
      "message": "Nice!",
      "revId": "0116f8466a042493b1dc71e00b4025bbd54f1307",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1094d619_afc6e5cb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 128
      },
      "writtenOn": "2022-08-28T08:31:19Z",
      "side": 1,
      "message": "Do you want to update I8031af03a9f229fa7f757734 to match the new interface? I always find it easier to review code when I can somewhere see how it\u0027s going to be used.",
      "revId": "0116f8466a042493b1dc71e00b4025bbd54f1307",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "44504e4f_590c8b1d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1196
      },
      "writtenOn": "2022-08-30T11:13:41Z",
      "side": 1,
      "message": "Done. Sorry for the delay.\n\nPS19 of that patch, which uses the old interface, adds 1465 LOC. PS20, which uses the new interface, adds 756.",
      "parentUuid": "1094d619_afc6e5cb",
      "revId": "0116f8466a042493b1dc71e00b4025bbd54f1307",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b0d3d5aa_10208c57",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 128
      },
      "writtenOn": "2022-08-30T12:29:27Z",
      "side": 1,
      "message": "This is a breaking change, so it needs a major version bump, right?\n\nMaybe go to 1.0? Things that make it into production with an 0.x version number tend to get stuck on it. ",
      "revId": "0116f8466a042493b1dc71e00b4025bbd54f1307",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "daaba114_02e40432",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1196
      },
      "writtenOn": "2022-08-31T09:01:57Z",
      "side": 1,
      "message": "For sure. Up until now I\u0027ve tagged a new version and pushed it to release it (have it picked up by Packagist). My intention is to tag 1.0.0 once this change is merged.\n\nI\u0027m happy to declare the version in composer.json, if you\u0027d prefer. Though I\u0027d note that other libraries don\u0027t appear to take this approach [0].\n\n[0] https://codesearch.wmcloud.org/libraries/?q\u003d%22version%22\u0026files\u003dcomposer.json%24",
      "parentUuid": "b0d3d5aa_10208c57",
      "revId": "0116f8466a042493b1dc71e00b4025bbd54f1307",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7c402156_bfb9da2c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 128
      },
      "writtenOn": "2022-08-31T09:12:08Z",
      "side": 1,
      "message": "No need. I think the spec actually recommends against it.",
      "parentUuid": "daaba114_02e40432",
      "revId": "0116f8466a042493b1dc71e00b4025bbd54f1307",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "380a6d0e_2f490e3d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 128
      },
      "writtenOn": "2022-08-31T09:13:12Z",
      "side": 1,
      "message": "Do you have someone to give a +2 on this? I don\u0027t really have all the context, but since there is no risk for production because this is a versioned library, I can merge it.",
      "revId": "0116f8466a042493b1dc71e00b4025bbd54f1307",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f5e96a70_1459662e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 34
      },
      "writtenOn": "2022-08-31T23:08:44Z",
      "side": 1,
      "message": "I assume this will need to be released before the vendor and EventLogging patch can pass. I assume you already have permission and familiarity with that from the previous release. Let me know if you need any help.",
      "revId": "0116f8466a042493b1dc71e00b4025bbd54f1307",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e48a74ed_c360c5ef",
        "filename": "tests/consistency/php/ConsistencyTestIntegration.php",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 128
      },
      "writtenOn": "2022-08-26T11:11:50Z",
      "side": 1,
      "message": "For testing, it may be nicer to append to an array, and to add a getter that allows the test case to access and check the content of the array. That\u0027s assuming this is for use in a phpuniot test. Is it?",
      "revId": "0116f8466a042493b1dc71e00b4025bbd54f1307",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2ff9418_b1eb6669",
        "filename": "tests/consistency/php/ConsistencyTestIntegration.php",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1196
      },
      "writtenOn": "2022-08-26T11:25:02Z",
      "side": 1,
      "message": "This is part of a top-level consistency test, which checks, given some predefined values for contextual attributes, whether the various implementations emit the same event. The test harness reads the console output of the individual implementations (see tests/consistency/php/main.php).",
      "parentUuid": "e48a74ed_c360c5ef",
      "revId": "0116f8466a042493b1dc71e00b4025bbd54f1307",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4c374de7_837ccf4d",
        "filename": "tests/consistency/php/ConsistencyTestIntegration.php",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 128
      },
      "writtenOn": "2022-08-31T09:12:08Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f2ff9418_b1eb6669",
      "revId": "0116f8466a042493b1dc71e00b4025bbd54f1307",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    }
  ]
}