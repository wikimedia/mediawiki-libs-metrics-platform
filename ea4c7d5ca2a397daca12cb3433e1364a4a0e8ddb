{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b2e5d8a0_89a67324",
        "filename": "java/src/main/java/org/wikimedia/metrics_platform/MetricsClient.java",
        "patchSetId": 3
      },
      "lineNbr": 198,
      "author": {
        "id": 1196
      },
      "writtenOn": "2022-10-24T11:24:12Z",
      "side": 0,
      "message": "This comment still applies. SamplingController#isInSample() doesn\u0027t handle the case when streamConfig is null, for example.",
      "range": {
        "startLine": 198,
        "startChar": 8,
        "endLine": 198,
        "endChar": 54
      },
      "revId": "ea4c7d5ca2a397daca12cb3433e1364a4a0e8ddb",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7e441295_093627b7",
        "filename": "java/src/main/java/org/wikimedia/metrics_platform/MetricsClient.java",
        "patchSetId": 3
      },
      "lineNbr": 198,
      "author": {
        "id": 9678
      },
      "writtenOn": "2022-10-25T11:27:39Z",
      "side": 0,
      "message": "What do we intend to do when it is null, so i can fix that next",
      "parentUuid": "b2e5d8a0_89a67324",
      "range": {
        "startLine": 198,
        "startChar": 8,
        "endLine": 198,
        "endChar": 54
      },
      "revId": "ea4c7d5ca2a397daca12cb3433e1364a4a0e8ddb",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4eae24d0_dec81e0d",
        "filename": "java/src/main/java/org/wikimedia/metrics_platform/MetricsClient.java",
        "patchSetId": 3
      },
      "lineNbr": 198,
      "author": {
        "id": 1196
      },
      "writtenOn": "2022-10-26T06:04:24Z",
      "side": 0,
      "message": "In I821c3158b9e154e55bbca25afaecb529a9c959b4, we short-circuited the processing events by returning early if there were no stream configs. To be consistent with that, canEventBeSentToDestinationService should return false when streamConfig is null, i.e.\n\n return streamConfig !\u003d null \u0026\u0026\n   samplingController.isInSample(streamConfig)\n   curationController.eventPassesCurationRules(event, streamConfig);\n\nThat way, events that have no corresponding stream config (for now) are left in pending, ready to be sent later.",
      "parentUuid": "7e441295_093627b7",
      "range": {
        "startLine": 198,
        "startChar": 8,
        "endLine": 198,
        "endChar": 54
      },
      "revId": "ea4c7d5ca2a397daca12cb3433e1364a4a0e8ddb",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8202535a_6937ff02",
        "filename": "java/src/main/java/org/wikimedia/metrics_platform/MetricsClient.java",
        "patchSetId": 3
      },
      "lineNbr": 198,
      "author": {
        "id": 9678
      },
      "writtenOn": "2022-10-26T13:53:25Z",
      "side": 0,
      "message": "Done",
      "parentUuid": "4eae24d0_dec81e0d",
      "range": {
        "startLine": 198,
        "startChar": 8,
        "endLine": 198,
        "endChar": 54
      },
      "revId": "ea4c7d5ca2a397daca12cb3433e1364a4a0e8ddb",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b17303a9_6b33db56",
        "filename": "java/src/main/java/org/wikimedia/metrics_platform/MetricsClient.java",
        "patchSetId": 6
      },
      "lineNbr": 189,
      "author": {
        "id": 2974
      },
      "writtenOn": "2022-10-26T20:10:53Z",
      "side": 0,
      "message": "Using `drainTo()` is a good way to work with a blocking queue, as it ensures that events are processed only once. In the previous implementation, it was also taking care of removing events from the pendingEvents, which we loose in the current implementation.\n\nWe should probably use a simpler approach of just adding a filter to filter out events that don\u0027t have a config. At least until we know what we want to do with those events.",
      "range": {
        "startLine": 189,
        "startChar": 27,
        "endLine": 189,
        "endChar": 34
      },
      "revId": "ea4c7d5ca2a397daca12cb3433e1364a4a0e8ddb",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58b4a854_804df0b9",
        "filename": "java/src/main/java/org/wikimedia/metrics_platform/MetricsClient.java",
        "patchSetId": 6
      },
      "lineNbr": 189,
      "author": {
        "id": 2638
      },
      "writtenOn": "2022-10-27T09:24:09Z",
      "side": 0,
      "message": "The LinkedBlockingQueue iterator is non blocking so fine to use this case, (note that it\u0027s calling iterator.remove(), so processed events are not kept forever). It allows to achieve what was asked by Sam in a earlier comment:\n\u003e That way, events that have no corresponding stream config (for now) are left in pending, ready to be sent later.\n\nIt does not solve the case of pathological events that might never have a corresponding config and will remain in the queue for ever causing future event addition to fail on the queue max capacity. But I think this part is tracked in the todo (https://phabricator.wikimedia.org/T320783).\n\nIf ultimately we decide to simply drop these events and not give them a second chance then drainTo is certainly a better approach.",
      "parentUuid": "b17303a9_6b33db56",
      "range": {
        "startLine": 189,
        "startChar": 27,
        "endLine": 189,
        "endChar": 34
      },
      "revId": "ea4c7d5ca2a397daca12cb3433e1364a4a0e8ddb",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7a1231d_18c0d259",
        "filename": "java/src/main/java/org/wikimedia/metrics_platform/MetricsClient.java",
        "patchSetId": 6
      },
      "lineNbr": 189,
      "author": {
        "id": 2974
      },
      "writtenOn": "2022-11-01T15:09:05Z",
      "side": 0,
      "message": "If I\u0027m reading the code correctly, it still requires sendEnqueuedEvents() to not be called concurrently, otherwise it might send duplicate events.",
      "parentUuid": "58b4a854_804df0b9",
      "range": {
        "startLine": 189,
        "startChar": 27,
        "endLine": 189,
        "endChar": 34
      },
      "revId": "ea4c7d5ca2a397daca12cb3433e1364a4a0e8ddb",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "084277ef_d5212383",
        "filename": "java/src/main/java/org/wikimedia/metrics_platform/MetricsClient.java",
        "patchSetId": 6
      },
      "lineNbr": 189,
      "author": {
        "id": 2638
      },
      "writtenOn": "2022-11-02T09:21:38Z",
      "side": 0,
      "message": "oh indeed! if this method is called concurrently we might ship duplicates... \nSince it\u0027s executed from a TimerTask I believe that it\u0027s not the case but that\u0027s certainly a weak guarantee and an explicit lock over this loop might be necessary if we want to pursue this approach.",
      "parentUuid": "b7a1231d_18c0d259",
      "range": {
        "startLine": 189,
        "startChar": 27,
        "endLine": 189,
        "endChar": 34
      },
      "revId": "ea4c7d5ca2a397daca12cb3433e1364a4a0e8ddb",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    }
  ]
}