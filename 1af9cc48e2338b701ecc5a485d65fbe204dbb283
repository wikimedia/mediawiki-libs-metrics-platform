{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "eea953fe_a4361915",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 2974
      },
      "writtenOn": "2022-10-10T14:50:33Z",
      "side": 1,
      "message": "Most comments left should be addressed in another CR. The Java 9 question needs to be answered before merging.",
      "revId": "1af9cc48e2338b701ecc5a485d65fbe204dbb283",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "838a05d7_1ce29a2a",
        "filename": "java/pom.xml",
        "patchSetId": 5
      },
      "lineNbr": 106,
      "author": {
        "id": 2974
      },
      "writtenOn": "2022-10-10T14:49:44Z",
      "side": 1,
      "message": "Do we use any Java 9 syntax? If we want to raise the minimal Java version, we should do it with properties, which ensures that not only the compiler plugin is configured, but any other plugin that respect those standard properties. See https://github.com/wikimedia/wikimedia-discovery-discovery-parent-pom/blob/master/pom.xml#L75-L76",
      "range": {
        "startLine": 105,
        "startChar": 20,
        "endLine": 106,
        "endChar": 38
      },
      "revId": "1af9cc48e2338b701ecc5a485d65fbe204dbb283",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "53415c40_7276efc8",
        "filename": "java/pom.xml",
        "patchSetId": 5
      },
      "lineNbr": 106,
      "author": {
        "id": 9678
      },
      "writtenOn": "2022-10-10T14:55:26Z",
      "side": 1,
      "message": "Map.of seems to be a java 9 syntax, the IDE recommended it",
      "parentUuid": "838a05d7_1ce29a2a",
      "range": {
        "startLine": 105,
        "startChar": 20,
        "endLine": 106,
        "endChar": 38
      },
      "revId": "1af9cc48e2338b701ecc5a485d65fbe204dbb283",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eef123aa_9a1e0ee9",
        "filename": "java/pom.xml",
        "patchSetId": 5
      },
      "lineNbr": 106,
      "author": {
        "id": 2974
      },
      "writtenOn": "2022-10-11T07:42:35Z",
      "side": 1,
      "message": "Oh, that\u0027s Java 9 standard libraries, not the language. I think that at the moment, we should keep the Java 8 compatibility. So keep the ugly multi-line creation of that map. (sorry, I know I\u0027m the one who proposed the `Map.of()`, I did not remember that this was introduced in Java 9).",
      "parentUuid": "53415c40_7276efc8",
      "range": {
        "startLine": 105,
        "startChar": 20,
        "endLine": 106,
        "endChar": 38
      },
      "revId": "1af9cc48e2338b701ecc5a485d65fbe204dbb283",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "471fe8e3_3d7731f6",
        "filename": "java/src/main/java/org/wikimedia/metrics_platform/MetricsClient.java",
        "patchSetId": 5
      },
      "lineNbr": 198,
      "author": {
        "id": 1196
      },
      "writtenOn": "2022-10-10T14:56:03Z",
      "side": 1,
      "message": "Out of scope for this patch: We should first filter the pending batch of events to see if there are events for streams that no longer exist.",
      "range": {
        "startLine": 198,
        "startChar": 8,
        "endLine": 198,
        "endChar": 54
      },
      "revId": "1af9cc48e2338b701ecc5a485d65fbe204dbb283",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "deb61f9d_a5d75202",
        "filename": "java/src/main/java/org/wikimedia/metrics_platform/MetricsClient.java",
        "patchSetId": 5
      },
      "lineNbr": 312,
      "author": {
        "id": 2974
      },
      "writtenOn": "2022-10-10T14:49:44Z",
      "side": 1,
      "message": "This method is still a bit problematic. We get the config on L313, but by the time we run the test on L314, another thread might have already loaded the config. It\u0027s not terrible, just not nice. This should be refactored in another CR, where we look at how the config reload mechanism works in more details.",
      "range": {
        "startLine": 312,
        "startChar": 20,
        "endLine": 312,
        "endChar": 23
      },
      "revId": "1af9cc48e2338b701ecc5a485d65fbe204dbb283",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    }
  ]
}