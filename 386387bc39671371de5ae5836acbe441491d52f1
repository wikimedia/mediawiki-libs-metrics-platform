{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a619512d_b9030aa0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 25
      },
      "lineNbr": 0,
      "author": {
        "id": 1196
      },
      "writtenOn": "2022-11-24T19:07:54Z",
      "side": 1,
      "message": "This is looking good!\n\n-1 per the blocking comment inline.",
      "revId": "386387bc39671371de5ae5836acbe441491d52f1",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b2bea99_e7e1267b",
        "filename": "java/src/main/java/org/wikimedia/metrics_platform/DestinationEventService.java",
        "patchSetId": 25
      },
      "lineNbr": 26,
      "author": {
        "id": 1196
      },
      "writtenOn": "2022-11-24T19:07:54Z",
      "side": 1,
      "message": "Non-blocking: This is inconsistent with the ANALYTICS and ERROR_LOGGING fields above.",
      "range": {
        "startLine": 26,
        "startChar": 32,
        "endLine": 26,
        "endChar": 42
      },
      "revId": "386387bc39671371de5ae5836acbe441491d52f1",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa20fa3a_86fd1f08",
        "filename": "java/src/main/java/org/wikimedia/metrics_platform/MetricsClient.java",
        "patchSetId": 25
      },
      "lineNbr": 190,
      "author": {
        "id": 1196
      },
      "writtenOn": "2022-11-24T19:07:54Z",
      "side": 1,
      "message": "Non-blocking: If you wrote this as\n\n return eventStreamsMap.getOrDefault( eventName, ava.util.Collections.emptySet() );\n\nthen you can remove the null check on L147 above.",
      "range": {
        "startLine": 190,
        "startChar": 8,
        "endLine": 190,
        "endChar": 47
      },
      "revId": "386387bc39671371de5ae5836acbe441491d52f1",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c0eea33_206f9e5d",
        "filename": "java/src/main/java/org/wikimedia/metrics_platform/MetricsClient.java",
        "patchSetId": 25
      },
      "lineNbr": 223,
      "author": {
        "id": 2974
      },
      "writtenOn": "2022-11-24T17:50:02Z",
      "side": 1,
      "message": "nit: technically, those 2 variables should be coherent. In this case, I don\u0027t think there is any major issues if they are desynchronized, so feel free to ignore all this.\n\nI think that this indicates the need to have a Configuration object that encapsulate those 2 variables and represents how we interact with configuration. This is probably out of the scope of this CR.\n\nThread safety is hard! This might be the occasion to talk about it in more details if you are up to it.",
      "range": {
        "startLine": 222,
        "startChar": 8,
        "endLine": 223,
        "endChar": 105
      },
      "revId": "386387bc39671371de5ae5836acbe441491d52f1",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9156de1d_f5b43c39",
        "filename": "java/src/main/java/org/wikimedia/metrics_platform/MetricsClient.java",
        "patchSetId": 25
      },
      "lineNbr": 223,
      "author": {
        "id": 1196
      },
      "writtenOn": "2022-11-24T19:07:54Z",
      "side": 1,
      "message": "Question: Should you use the streamConfigsReference parameter here? Is there a chance that the two class properties could become out of sync?",
      "range": {
        "startLine": 223,
        "startChar": 69,
        "endLine": 223,
        "endChar": 102
      },
      "revId": "386387bc39671371de5ae5836acbe441491d52f1",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9da948a_db993dd5",
        "filename": "java/src/main/java/org/wikimedia/metrics_platform/MetricsClient.java",
        "patchSetId": 25
      },
      "lineNbr": 223,
      "author": {
        "id": 2974
      },
      "writtenOn": "2022-11-25T07:41:04Z",
      "side": 1,
      "message": "The issue is not as much using the parameter or the instance variable. It is that processing the events happens in a different thread. So when the streamConfigs are set, that other thread might see the streamConfigsReference updated but not the eventsStreamConfigsMap (or the other way round, order isn\u0027t guaranteed).\n\nThere is a similar issue on L145 and L149: we `getStreamNamesForEvent()` on L145, which depends on `eventsStreamConfigsMap` and then we `shouldProcessEventsForStream()` on L149, which depends on `streamConfigsReference`. We could end up with only the changes to one of those variables visible. Which means that we might either discard events for which we now have a valid configuration (probably not a big deal, had those events be generated earlier, they would have been discarded anyway) or we might let events pass, but not have the appropriate configuration when processing them (I haven\u0027t checked the code thoroughly, but I suspect it is robust to that).",
      "parentUuid": "9156de1d_f5b43c39",
      "range": {
        "startLine": 223,
        "startChar": 69,
        "endLine": 223,
        "endChar": 102
      },
      "revId": "386387bc39671371de5ae5836acbe441491d52f1",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a77d22b3_833f85d8",
        "filename": "java/src/main/java/org/wikimedia/metrics_platform/MetricsClient.java",
        "patchSetId": 25
      },
      "lineNbr": 223,
      "author": {
        "id": 2974
      },
      "writtenOn": "2022-11-25T07:51:20Z",
      "side": 1,
      "message": "Note that there is probably also a scenario where the config is reloaded concurrently and things get messed up even more. But that\u0027s probably a very low probability: config is reloaded from a single thread (TimerThread), and is unlikely to happen at a high enough frequency to matter anyway.\n\nStill, this generally points in the direction that validating that this very simple method actually works as expected requires reading a lot of semi related code.\n\nRefactoring how configuration is exposed and reloaded would help improve the guarantees that the code is correct. But that should probably not happen in this CR.\n\nYes, concurrency is hard!\n\nIf you want to get into the details of the Java Memory Model and see why your understanding of concurrency (and mine too!) is probably wrong, Aleksey ShipilÃ«v has some very good writing: https://shipilev.net/blog/2016/close-encounters-of-jmm-kind/. While this is all very JVM centric, a lot of the principles apply to other concurrent languages as well.",
      "parentUuid": "a9da948a_db993dd5",
      "range": {
        "startLine": 223,
        "startChar": 69,
        "endLine": 223,
        "endChar": 102
      },
      "revId": "386387bc39671371de5ae5836acbe441491d52f1",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9908eeb5_86e1b224",
        "filename": "java/src/main/java/org/wikimedia/metrics_platform/MetricsClient.java",
        "patchSetId": 25
      },
      "lineNbr": 223,
      "author": {
        "id": 9097
      },
      "writtenOn": "2022-11-28T04:27:18Z",
      "side": 1,
      "message": "Concurrency is hard -- thanks for the heads up - need to think about this and research some more.\n\nI had added \"eventsStreamConfigsMap\" at @Gehel\u0027s suggestion in an earlier comment (see https://gerrit.wikimedia.org/r/c/mediawiki/libs/metrics-platform/+/850493/21..25/java/src/main/java/org/wikimedia/metrics_platform/MetricsClient.java#b141). \n\nI can pull this out for now, call it on the fly for when it\u0027s needed. Per above comment, I am refactoring the stream config stuff anyway in a separate PR for https://phabricator.wikimedia.org/T318948 so we can carry on this discussion there. If this seems acceptable, I will follow up with a ps that reverts these additional class members in the spirit of at least landing this dispatch method patch sooner than later.",
      "parentUuid": "a77d22b3_833f85d8",
      "range": {
        "startLine": 223,
        "startChar": 69,
        "endLine": 223,
        "endChar": 102
      },
      "revId": "386387bc39671371de5ae5836acbe441491d52f1",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5cfcbd4f_787a5202",
        "filename": "java/src/main/java/org/wikimedia/metrics_platform/MetricsClient.java",
        "patchSetId": 25
      },
      "lineNbr": 223,
      "author": {
        "id": 9097
      },
      "writtenOn": "2022-11-28T04:27:18Z",
      "side": 1,
      "message": "invite sent - want to do this properly so happy to have your advice on approach",
      "parentUuid": "8c0eea33_206f9e5d",
      "range": {
        "startLine": 222,
        "startChar": 8,
        "endLine": 223,
        "endChar": 105
      },
      "revId": "386387bc39671371de5ae5836acbe441491d52f1",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3253cddf_db6188f9",
        "filename": "java/src/main/java/org/wikimedia/metrics_platform/MetricsClient.java",
        "patchSetId": 25
      },
      "lineNbr": 223,
      "author": {
        "id": 9097
      },
      "writtenOn": "2022-11-28T16:22:50Z",
      "side": 1,
      "message": "would the issue of vars being in sync be resolved by making either or both MetricsClient properties a concurrent hashmap instead of atomic references?",
      "parentUuid": "9908eeb5_86e1b224",
      "range": {
        "startLine": 223,
        "startChar": 69,
        "endLine": 223,
        "endChar": 102
      },
      "revId": "386387bc39671371de5ae5836acbe441491d52f1",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ce1c5bf4_7ca69187",
        "filename": "java/src/main/java/org/wikimedia/metrics_platform/MetricsClient.java",
        "patchSetId": 25
      },
      "lineNbr": 223,
      "author": {
        "id": 2974
      },
      "writtenOn": "2022-11-29T13:24:25Z",
      "side": 1,
      "message": "The current version is good enough to be merged. The code is functionally correct (as far as I can see), we can do additional cleanup for readability in another CR (or ignore those).",
      "parentUuid": "3253cddf_db6188f9",
      "range": {
        "startLine": 223,
        "startChar": 69,
        "endLine": 223,
        "endChar": 102
      },
      "revId": "386387bc39671371de5ae5836acbe441491d52f1",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ebe16aa6_b76a4f2d",
        "filename": "java/src/main/java/org/wikimedia/metrics_platform/MetricsClient.java",
        "patchSetId": 25
      },
      "lineNbr": 223,
      "author": {
        "id": 2974
      },
      "writtenOn": "2022-11-29T13:24:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5cfcbd4f_787a5202",
      "range": {
        "startLine": 222,
        "startChar": 8,
        "endLine": 223,
        "endChar": 105
      },
      "revId": "386387bc39671371de5ae5836acbe441491d52f1",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ab8bd16_2d107443",
        "filename": "java/src/main/java/org/wikimedia/metrics_platform/StreamConfig.java",
        "patchSetId": 25
      },
      "lineNbr": 92,
      "author": {
        "id": 2974
      },
      "writtenOn": "2022-11-24T17:50:02Z",
      "side": 1,
      "message": "I\u0027m a bit surprised to see Events as part of the configuration. I\u0027m thinking about events as short lived objects, not as configuration. As such, an inline comment explaining why we keep a set of events here would be welcomed.\n\nI\u0027m also not sure where we add events to this set.",
      "range": {
        "startLine": 92,
        "startChar": 34,
        "endLine": 92,
        "endChar": 51
      },
      "revId": "386387bc39671371de5ae5836acbe441491d52f1",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e20dece6_415a104e",
        "filename": "java/src/main/java/org/wikimedia/metrics_platform/StreamConfig.java",
        "patchSetId": 25
      },
      "lineNbr": 92,
      "author": {
        "id": 1196
      },
      "writtenOn": "2022-11-24T19:07:54Z",
      "side": 1,
      "message": "Blocking: Following on from the above, this should be\n\n Set\u003cString\u003e events;",
      "parentUuid": "1ab8bd16_2d107443",
      "range": {
        "startLine": 92,
        "startChar": 34,
        "endLine": 92,
        "endChar": 51
      },
      "revId": "386387bc39671371de5ae5836acbe441491d52f1",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "548591cb_7277c4c1",
        "filename": "java/src/main/java/org/wikimedia/metrics_platform/StreamConfig.java",
        "patchSetId": 25
      },
      "lineNbr": 92,
      "author": {
        "id": 9097
      },
      "writtenOn": "2022-11-28T04:27:18Z",
      "side": 1,
      "message": "Done - changed to Set\u003cString\u003e\n\n@Gehel - AIUI streams in the MP context subscribe to events they are interested in - these are registered via config and I\u0027m re-working how stream configs work per T318948",
      "parentUuid": "e20dece6_415a104e",
      "range": {
        "startLine": 92,
        "startChar": 34,
        "endLine": 92,
        "endChar": 51
      },
      "revId": "386387bc39671371de5ae5836acbe441491d52f1",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "463b3016_445a430c",
        "filename": "java/src/main/java/org/wikimedia/metrics_platform/context/CustomData.java",
        "patchSetId": 25
      },
      "lineNbr": 35,
      "author": {
        "id": 2974
      },
      "writtenOn": "2022-11-24T17:50:02Z",
      "side": 1,
      "message": "We already have a @ParametersAreNonnullByDefault annotation that is documenting that those parameters should not be null. I\u0027m not convinced that there is a lot of value in adding this check, that will still throw a NullPointerException (with a slightly better message).\n\nWe could have an hour long discussion on null checks and null-safe design :)",
      "range": {
        "startLine": 34,
        "startChar": 8,
        "endLine": 35,
        "endChar": 64
      },
      "revId": "386387bc39671371de5ae5836acbe441491d52f1",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dfad0c06_8c776353",
        "filename": "java/src/main/java/org/wikimedia/metrics_platform/context/CustomData.java",
        "patchSetId": 25
      },
      "lineNbr": 35,
      "author": {
        "id": 1196
      },
      "writtenOn": "2022-11-24T19:07:54Z",
      "side": 1,
      "message": "Non-blocking: value can be null",
      "range": {
        "startLine": 35,
        "startChar": 8,
        "endLine": 35,
        "endChar": 64
      },
      "revId": "386387bc39671371de5ae5836acbe441491d52f1",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75ba5d6b_3a9cda34",
        "filename": "java/src/main/java/org/wikimedia/metrics_platform/context/CustomData.java",
        "patchSetId": 25
      },
      "lineNbr": 35,
      "author": {
        "id": 9097
      },
      "writtenOn": "2022-11-28T04:27:18Z",
      "side": 1,
      "message": "removed for now - invite sent to discuss along with thread safety (comment below)",
      "parentUuid": "463b3016_445a430c",
      "range": {
        "startLine": 34,
        "startChar": 8,
        "endLine": 35,
        "endChar": 64
      },
      "revId": "386387bc39671371de5ae5836acbe441491d52f1",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    }
  ]
}