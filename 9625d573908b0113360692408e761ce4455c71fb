{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5370b1cd_a4d0b4b7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 2974
      },
      "writtenOn": "2023-03-14T14:47:16Z",
      "side": 1,
      "message": "minor comment inline.",
      "revId": "9625d573908b0113360692408e761ce4455c71fb",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "10264a8a_66375043",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1196
      },
      "writtenOn": "2023-03-15T11:42:40Z",
      "side": 1,
      "message": "I\u0027ve been \u0027\u0027\u0027bold\u0027\u0027\u0027 and resolved some comments that looked like they had been fully addressed.",
      "revId": "9625d573908b0113360692408e761ce4455c71fb",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0d06f92_dd0bf079",
        "filename": "java/src/test/java/org/wikimedia/metrics_platform/EndToEndIT.java",
        "patchSetId": 8
      },
      "lineNbr": 43,
      "author": {
        "id": 2974
      },
      "writtenOn": "2023-03-14T14:47:16Z",
      "side": 1,
      "message": "This is slightly suspicious. Here, we are mocking the response from eventgate. I\u0027m not sure what it returns, but I doubt that is echoes back all events to the sender.",
      "range": {
        "startLine": 43,
        "startChar": 25,
        "endLine": 43,
        "endChar": 60
      },
      "revId": "9625d573908b0113360692408e761ce4455c71fb",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22a6d6a0_0a030c7f",
        "filename": "java/src/test/java/org/wikimedia/metrics_platform/EndToEndIT.java",
        "patchSetId": 8
      },
      "lineNbr": 43,
      "author": {
        "id": 9097
      },
      "writtenOn": "2023-03-14T21:22:18Z",
      "side": 1,
      "message": "When I test end-to-end using the non-wiremock method (involves sleeps and hard-coding the DestinationEventService to LOCAL), I watch my local eventlogging stream during the test which produces, validates, and accepts the event, as well as spits out the event data upon success - so this mocks the response from my local eventgate. \n\nI\u0027m not sure how to go about testing/seeing the response on the prod EventGate Analytics cluster.\n\n@Phuedx do you happen to know? also, if this lgtu, please merge. This follow up patch actually helped identify some bugs so I\u0027m glad we\u0027re adding it. We could shave down \"streamconfigs-local.json\" to just the relevant streams if that helps on size but it closely replicates what the Java client would have to parse when fetching stream configs.",
      "parentUuid": "d0d06f92_dd0bf079",
      "range": {
        "startLine": 43,
        "startChar": 25,
        "endLine": 43,
        "endChar": 60
      },
      "revId": "9625d573908b0113360692408e761ce4455c71fb",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c241cac_5eb61407",
        "filename": "java/src/test/java/org/wikimedia/metrics_platform/EndToEndIT.java",
        "patchSetId": 8
      },
      "lineNbr": 43,
      "author": {
        "id": 1196
      },
      "writtenOn": "2023-03-15T11:33:20Z",
      "side": 1,
      "message": "EventGate will respond in the following ways:\n\n * Received N valid events:\n  * Status code: 204\n  * Reason phrase: \"All N events out of N events were accepted.\"\n  * Body: Empty\n\n * Received N invalid events:\n  * Status code: 400\n  * Reason phrase: \"N out of N events were invalid and not accepted.\"\n  * Body: JSON-encoded list of validation errors\n\n * Received N events, M were invalid, O had errors, and M + O \u003c N:\n  * Status code: 207\n  * Reason phrase: \"N-M out of N events were accepted, but M failed (M invalid and O errored).\"\n  * Body: JSON-encoded object with two keys – invalid, error – which map to lists of validation errors\n\n * Received N events, M were invalid, O had errors, and M + O \u003d N:\n  * Status code: 500\n  * Reason phrase: \"N out of N events had failures and were not accepted. (M invalid and O errored).\"\n  * Body: JSON-encoded object with two keys – invalid, error – which map to lists of validation errors\n\nSee https://github.com/wikimedia/eventgate/blob/master/routes/events.js#L77-L127C2",
      "parentUuid": "22a6d6a0_0a030c7f",
      "range": {
        "startLine": 43,
        "startChar": 25,
        "endLine": 43,
        "endChar": 60
      },
      "revId": "9625d573908b0113360692408e761ce4455c71fb",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27f09859_676e5fd4",
        "filename": "java/src/test/java/org/wikimedia/metrics_platform/EndToEndIT.java",
        "patchSetId": 8
      },
      "lineNbr": 43,
      "author": {
        "id": 9097
      },
      "writtenOn": "2023-03-15T22:33:29Z",
      "side": 1,
      "message": "thanks - that\u0027s gtk -- so in the context of this particular test, sending back a response of the expected event (similar to the consistency test) to compare against using stubbed api calls and the client code methods is still valuable?\n\nfwiw, every time code gets updated, i run an end-to-end test to verify produced/validated/accepted events on my local eventgate server and so far with the current state of the java client, it works \\o/",
      "parentUuid": "5c241cac_5eb61407",
      "range": {
        "startLine": 43,
        "startChar": 25,
        "endLine": 43,
        "endChar": 60
      },
      "revId": "9625d573908b0113360692408e761ce4455c71fb",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3535ecc9_f67d4fac",
        "filename": "java/src/test/java/org/wikimedia/metrics_platform/EndToEndIT.java",
        "patchSetId": 8
      },
      "lineNbr": 43,
      "author": {
        "id": 1196
      },
      "writtenOn": "2023-03-17T06:52:25Z",
      "side": 1,
      "message": "As I said yesterday, I think that there\u0027s value in correctly stubbing the response from EventGate, i.e. returning an HTTP 204.",
      "parentUuid": "27f09859_676e5fd4",
      "range": {
        "startLine": 43,
        "startChar": 25,
        "endLine": 43,
        "endChar": 60
      },
      "revId": "9625d573908b0113360692408e761ce4455c71fb",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bee6801d_7d427c77",
        "filename": "java/src/test/java/org/wikimedia/metrics_platform/EndToEndIT.java",
        "patchSetId": 8
      },
      "lineNbr": 43,
      "author": {
        "id": 2974
      },
      "writtenOn": "2023-03-17T13:23:09Z",
      "side": 1,
      "message": "That\u0027s super interesting! I think we don\u0027t manage those responses correctly. We assumed that the nominal response was HTTP/200 instead of HTTP/204. So we\u0027ll probably reenqueue events forever, assuming they were not sent correctly.\n\nWe should also handle the failure modes better, probably dropping events that were invalid since it is unlikely that a retry will suddenly make them valid. Not sure about errors.\n\nIn all cases, I think this should be done as a separate CR. This one is already large enough!",
      "parentUuid": "3535ecc9_f67d4fac",
      "range": {
        "startLine": 43,
        "startChar": 25,
        "endLine": 43,
        "endChar": 60
      },
      "revId": "9625d573908b0113360692408e761ce4455c71fb",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "92abe586_8ffbf36f",
        "filename": "java/src/test/java/org/wikimedia/metrics_platform/EndToEndIT.java",
        "patchSetId": 8
      },
      "lineNbr": 43,
      "author": {
        "id": 1196
      },
      "writtenOn": "2023-03-17T13:58:19Z",
      "side": 1,
      "message": "Cool. In the interest of making progress, I\u0027ve submitted a follow-on patch that correctly stubs the EventGate HTTP response (I1b53eead4ad87b0d47d5ba4ab2ee07144391c2bf) so that I can merge this and the follow-on patch. You\u0027re correct that they\u0027re already large enough and provide a good basis for fixing the handling of the various EventGate HTTP response codes/status messages.",
      "parentUuid": "bee6801d_7d427c77",
      "range": {
        "startLine": 43,
        "startChar": 25,
        "endLine": 43,
        "endChar": 60
      },
      "revId": "9625d573908b0113360692408e761ce4455c71fb",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951"
    }
  ]
}